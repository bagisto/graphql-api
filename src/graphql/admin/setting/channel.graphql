# Setting\Channel Related APIs
extend type Query @guard(with: ["admin-api"]){
    channels(
        input: FilterChannelInput
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Admin\\Setting\\FilterChannel")
    ) : [Channel!] @paginate(type: "PAGINATOR" defaultCount:10 model: "Webkul\\Core\\Models\\Channel")

    channel(
        id: ID @eq
    ): Channel @find(model: "Webkul\\Core\\Models\\Channel")
}

extend type Mutation @guard(with: ["admin-api"]) {
    createChannel(
        input: CreateChannelInput!
    ): Channel @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Setting\\ChannelMutation@store")

    updateChannel(
        id: ID!,
        input: CreateChannelInput!
    ): Channel @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Setting\\ChannelMutation@update")

    deleteChannel(
        id: ID!
    ): Channel  @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Setting\\ChannelMutation@delete")
}

input FilterChannelInput {
    id: Int
    code: String
    name: String
    hostname: String
}

input CreateChannelInput {
    code: String! @rules(apply: ["required"])
    name: String! @rules(apply: ["required"])
    description: String
    theme: String
    hostname: String
    defaultLocaleId: Int! @rename(attribute: "default_locale_id") @rules(apply: ["required"])
    baseCurrencyId: Int! @rename(attribute: "base_currency_id") @rules(apply: ["required"])
    rootCategoryId: Int! @rename(attribute: "root_category_id") @rules(apply: ["required"])
    locales: [String!]! @rules(apply: ["required"])
    currencies: [String!]! @rules(apply: ["required"])
    inventorySources: [String!] @rename(attribute: "inventory_sources") @rules(apply: ["required"])
    logo: String
    favicon:String
    seoTitle: String! @rename(attribute: "seo_title") @rules(apply: ["required"])
    seoDescription: String! @rename(attribute: "seo_description") @rules(apply: ["required"])
    seoKeywords: String! @rename(attribute: "seo_keywords") @rules(apply: ["required"])
    maintenanceModeText: String @rename(attribute: "maintenance_mode_text")
    allowedIps: String @rename(attribute: "allowed_ips")
    isMaintenanceOn: Boolean @rename(attribute: "is_maintenance_on")
}

type Channel {
    id: ID!
    code: String!
    timezone: String
    theme: String
    hostname: String
    logoUrl: String @rename(attribute: "logo_url")
    faviconUrl: String @rename(attribute: "favicon_url")
    homeSeo: HomeSeo @rename(attribute: "home_seo")
    isMaintenanceOn: Boolean @rename(attribute: "is_maintenance_on")
    allowedIps: String @rename(attribute: "allowed_ips")
    rootCategoryId: Int! @rename(attribute: "root_category_id")
    defaultLocaleId: Int! @rename(attribute: "default_locale_id")
    baseCurrencyId: Int! @rename(attribute: "base_currency_id")
    createdAt: DateTime @rename(attribute: "created_at")
    updatedAt: DateTime @rename(attribute: "updated_at")
    locales: [Locale!] @belongsTo(relation: "locales")
    defaultLocale: Locale @rename(attribute: "default_locale")
    currencies: [Currency!] @belongsTo(relation: "currencies")
    baseCurrency: Currency! @rename(attribute: "base_currency")
    inventorySources: [InventorySource!] @belongsTo(relation: "inventory_sources")
    rootCategory: Category! @rename(attribute: "root_category")
    maintenanceModeText: String @rename(attribute: "maintenance_mode_text")
    name: String!
    description: String
    success: String
}

type HomeSeo {
    metaTitle: String @rename(attribute: "meta_title")
    metaKeywords: String @rename(attribute: "meta_keywords")
    metaDescription: String @rename(attribute: "meta_description")
}
