# Setting\Currency Related APIs
extend type Query @guard(with: ["admin-api"]) {
    currencies(
        input: FilterCurrencyInput
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Admin\\Setting\\FilterCurrency")
    ): [Currency!] @paginate(type: "PAGINATOR" defaultCount:10 model: "Webkul\\Core\\Models\\Currency")

    currency(
        id: ID @eq
    ): Currency @find(model: "Webkul\\Core\\Models\\Currency")
}

extend type Mutation @guard(with: ["admin-api"]) {
    createCurrency(
        input: CreateCurrencyInput!
    ): Currency  @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Setting\\CurrencyMutation@store")

    updateCurrency(
        id: ID!,
        input: CreateCurrencyInput!
    ): Currency  @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Setting\\CurrencyMutation@update")

    deleteCurrency(id: ID!): Currency  @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Setting\\CurrencyMutation@delete")
}

input FilterCurrencyInput {
    id: Int
    name: String
    code: String
}

input CreateCurrencyInput {
    name: String! @rules(apply: ["required"])
    code: String! @rules(apply: ["min:3","max:3","required"])
    symbol: String
    decimal: Int
}

type Currency {
    id: ID!
    code: String!
    name: String!
    symbol: String!
    decimal: Int
    createdAt: DateTime @rename(attribute: "created_at")
    updatedAt: DateTime @rename(attribute: "updated_at")
    exchangeRate: ExchangeRate @hasOne(relation: "exchange_rate")
    success: String
}
